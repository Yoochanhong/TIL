내 맘대로 씹고 뜯고 즐겨본 클린 아키텍쳐 - 양승훈

클린 아키텍쳐

그게 뭐냐?

뭐가 중요하냐?

어케 쓰냐?


GIF 검색 앱, GITPedia

MVC 방식으로 만든다면,

무한스크롤 기능 추가, 스크랩 기능 추가, 네트워킹 프레임워크를 변경하거나 다른 API를 사용할 때,
다른 팀에서 사용 가능하도록 모듈화할 때, 스유로 변경할 떄

이 요구사항이 한번에 들어온다면??

처리가 매우 힘들고, 비효율적이게 됨

어케어케 나눠서 작업한다 해도 모든게 하나의 파일에서 변경이 이루어져서 머지할 때 충돌 100% 남


뭐가 문제일까?

결합도가 높고, 응집도가 낮다 ==역할과 책임이 나눠있지 않다.

역할과 책임을 서로 다른 클래스로 분리하기

MVC는 하나의 클래스가 너무 많은 이유르 인해 수정되어야 함
 = 너무 많은 역할을 하고 있다.

MVVM으로 나눔

똑같은 기능을 단순히 여러개의 기능으로 나눔

UI, service, repo, network, viewmodel로 나누었다.

결합도와 응집도를 고려해 모듈화

계층을 다 모듈화하기

클래스로만 역할 책임을 분리하면 문제가 없지만, 외부 API를 사용하는 레포지토리는 거기에 의존할 수밖에 없음

의존성 역전을 이용함

각자는 각자의 데이터 모델을 가져서 서로의 데이터 모델을 몰라도 됨

서비스가 레포에 의존하는게 아니라 레포가 서비스에 의존해서 어떤 API든 사용하도록 바꿀 수 있음

중간으로 갈수록 의존성이 모이도록 수정


정말 해결 됐을까?

아까 MVC 방식으로 만들었을 때 처리하지 못했던 기능들을 각각의 레이어에 맞게만 구현해주면 위의 모든 기능을 추가할 수 있다.


서로 다른 API를 사용하더라도 같은 viewmodel로 받아와서 볼 수 있다.




토스에서 사용하는 microfeatures - 홍승재


이번에 슬래쉬 23에서 레고처럼 조립하는 토스 앱 이라는 영상이 있음

ios도 있음

영상 중간에 mfa를 사용한다고 함

트위스트에서 제작한 모듈 구조 = mfa

왜 사용할까??

명확하고 간결한 API

xcode로 프젝을 파면 단일 타켓으로 프젝이 나옴
코드에 암시적으로 의존성 구축이 쉬워짐
대신 모든것이 다 강하게 결합됨

mf는
인터페이스와 구현체 모듈을 분리
f를 더 잘 제어할수 잇음
안전하게 API를 설계 ㄱㄴ
 
작은 모듈

f에 집중하고 테스트 할 수 있다

필요한 요소만 선택적으로 컴파일 할 수 있고, 개발 주기를 훨씬 빠르게 할 수 있다


재사용성

mf를 구축 => 재사용이 매우 간단함

도메인과 피처를 나눠놓기 때문에 아이폰이나 애플워치에도 같은 도메인으로 쓸 수 있다.


그래서 써봤냐??

자비스에 써봄

3학년이 취업 준비를 하고 여름방학떄 취업을 하게 되는데

이 과정에서 학생과 회사가 접촉을 해야 함

그러기 위해서 교내 산학협력부와 만나서 수기로 작성 어쩌고 해서 신청해야 하는데

앱과 웹으로 그걸 편리하게 해줄 수 있게 하는 프로젝트임



토이 프로젝트를 통해 기업에서 사용하는 기술들을 사용해보자 

개발 실력이 향상 될 수 있다!


그거 이해하는데 얼마나 걸렸냐

아무래도 클린 아키텍쳐랑 tuist를 이해해야 해서 오래 결렸다



애플에게 토이 프로젝트로 인정받기 - 문다연


WWDC?

애플에서 여기서 신기술을 많이 공개함

학생들을 대상으로 SSC를 염

스위프트 학생 챌린지

학생만 참여 ㄱㄴ


Six dots

- 아이디어
- 기술적인 성과
- 재미, 호기심, 창의성

원샷한솔님을 보고 아이디어를 얻음

처음에는 점자 학습 앱을 만들었음

만들면 만들수록 왜 점자를 알아야 하는지가 선행되어야 한다는 생각을 해버림

3분 안에 심사위원들을 매료시킬 수 있을 내용일까?

이게 비장애인에게 필요한건지, 아니면 시각장애인에게 필요한건지 모르겠다

이게 학습 도구로 유효할지, 앱이라면 수요가 있을지, 모든 점자를 담을 적절한 UI가 있을지

이런 고민을 하던 중

- 3분안에 심사위원을 사로잡기엔 스토리 형식이 좋을 것 같다
- 타겟이 누구인지 명확하게 결정하자
- 학습 도구라면 원하는 문자에 대해 선택해서 학습하도록 하자
- 점자에 대학 인식이 학습뿐일까?
와 같은 피드백을 받고

점자 학습 도구 => 스토리에 따라 문제를 해결해가는 스토리 게임 방식으로 바꿈

시각자애인과 귀갓길을 함께 하는 짧은 시간동안 문제를 해결하는 앱으로 변경(미연시 느낌)

이 아이디어로 우승 했다


전하고 싶은, 나누고 싶은 이야기

조금 더 일찍 시작하지 못한 아쉬움 => 도전하고 싶으면 일단 해보기

SSC을 늦게 알아버린게 너무 아쉽다 => 기회가 있다면, 주저하지 말고 꼭 도전해 보기

동료가 있다는 것은 생각보다 도움이 되고 의지가 될 때가 있음 => iOS 개발을 함께 하는 사람들과의 네트워킹



iDC를 마치며 - Bettor

왜 토이 프로젝트였는가??

공부하는 것들이 어느정도 이해하고 있을지 의문이 들때

어디에서 따오긴 했는데 얼마나 이해하고있는지 확신이 들때

혼자 할때는 의지가 약해질 때가 많음

사이드 프로젝트로 제목을 바꿀껄이라는 생각이 들었다

그래도 토이 프로젝트로 ㅎ한걸 잘했다라는 생각이 들었다

다른 사람과 같이 하게 될때는 그 코드를 이해하지 못할수도 있고 기획의도와 변경될 수도 있어서

내가 만든게 아니면 흥미가 없을수도 있다 => 몰입이 안됨

내가 주체이기 때문에 내가 가장 잘 알아야 함

결론적으로 내가 뭐가 부족한지, 뭘 해야할지, 뭐에 관심이 있는지 확인할 수 있음


메인 테이너의 바람

혼자 할수 있는건 없다

비전공자가 iOS를 공부하기엔 벽이 너무 높았다

주변에 개발하는 분들도 없고, 옾챗방도 들어가보고 구글링 해봐도 얻을 수 있는 정보가 없었다

어케 할까 고민하다가 iOS 천명 있는 단톡방에서 모각코 할 사람 구한다 메시지를 보고

나도 대전에서 지역 커뮤니티를 만들면 어떨까?

바로 해버림

조금씩 유입이 되면서 좋은 기회가 생기면서 세미나도 진행하게 됨

더 넓은 시야를 가질 수 있게 되었다


마지막으로

노력이라는 복권같은 것이다

사도 맞을지는 모르지만

사지 않으면 얻을 수 없다.
