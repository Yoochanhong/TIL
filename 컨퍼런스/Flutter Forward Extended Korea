플러터 컨퍼런스 2023


플러터 개발자라면 놓치면 안되는 플러터 포워드 컨텐츠 - 유병욱(쿠로곰)


New version

신규 플러터 버젼 3.7
개선된 개발툴
머티리얼 3 위젯 추가
iOS 개발 친화성 업데이트
데탑, 앱 플랫폼 지원 강화

Dart 3a


New UI Engine
기존에 있던 skia 엔진을 대체할 Impeller 엔진의 등장.

이제 2D뿐만 아니라 일부 3D 렌더링, 더욱 가속화된 렌더링 퍼포먼스를 보여줄 수 있다.


More Powerful More Platform

플러터 포워드 On-Demand 컨텐츠 녹화 영상이 있음 ㅇㅇ

Test나 CI, CD도 있다고 함


추천하는 영상 6개 :

Design Related Contents

플러터는 아름다운 앱을 만드는데 특화된 프레임워크이다.

이 영상은 그런 앱을 만들기 위해 최초의 프로토타이핑을 하는 과정에 대한 가이드이다.

간단한 박스 위젯부터 데코레이션, 애니메이션, 커스텀 페이터에 쉐더까지 프로토타이핑의 기초를 모두 소개해 주고 있다.

30분 안쪽이라고 하니까 디자인을 위해서 꼭 보자(디자이너 몰래 혼자보기)


머터리얼 3 영상

머티리얼 3 디자인 가이드를 충족한 위젯들을 아주 손쉽게 만드는 방법을 소개하고 있다.

더 나아가 라우터로 자주 활용되는 고 라우터와의 연계나 Theme을 확장시켜 더욱 다양하게 활용할 수 있는 띰익스펜션도 같이 소개하고 있다.


평소 플러터가 어떻게 위젯을 그려내는지 궁금하다면??

Canvas.drawVertices

1시간정도 영상에 플러터가 어떻게 UI를 그려내는지 소개하고 있다.

캔버스와 드로우 메소드들을 소개하고 있다.


What is Impeller?

Skia 엔진의 후속작으로 개발된 임팰러에 소개하는 영상이다.

스키아에 비해 얼마나 개선이 이루어질 예정인지 자세하게 소개하고 있다.

iOS에서는 베타로 임펠러를 사용할 수 있다고 함!!


더욱 안정적이고 안전한 앱 개발을 위한 정보가 필요한 개발자들을 위한 영상

How to write effective Flutter and Dart tests

테스트의 중요성은 모두 다 알고있지만 내가 하고있는 테스트가 어떤지 효과적인지 알려주는 영상이다.

테스트의 단위테스트, 위젯 테스트, 통합 테스트에 대한 구체적인 목표와 방법 등을 알려준다.

Securing Flutter Apps

플러터 보안 이슈 관련 영상.

HTTP 인증서 핀팅을 사용하여 서버의 인증서를 클라에서 확인하는 방법, 불충분한 암호화에 대한 방지, 권한 부여

코드 퀄리티 등의 보안 문제와 해결책을 다룬다. 또한 RASP를 사용하여 동적으로 문제를 분석하는 방법도 소개한다.


Flutter Dev Youtube Channel에서 더 많은 영상을 참고할 수 있다..!!

5월에 Flutter in Google I/O 가 온라인에서 개최될 예정이다. 




Fashion & Style - 윤정원


미디어의 변화

지하철만 봐도 예전에는 신문을 읽었지만? 요즘은 폰을 본다.

뉴욕타임즈 170년의 역사를 가진 뉴스지만, SNS의 발전과 더불어 트위터 계정을 만들어 구독자를 유지하고 있다.

이렇게 매체에 따라 변해가는데, 패션도 이렇게 바뀔 수 없을까?

각각 남성과 젊은 여성을 타겟으로 일하다보니 대한민국 국민 약 5%인 240만명의 회원을 가지고 있는 SNS 전문 디지털 패션 미디어가 되었다.

패션 앤 스타일이란 어플을 만들기 위해 플러터를 선택했다고 하셨는데, 어떤 기준을 가지고, 플러터에 어떤 장점을 보고 고르셨는지 궁금합니다…!!




플러터 웹 베스트 사용하기 - 저스틴


Stable 버젼에 플러터 웹이 나올정도가 됐네? 한번 사용해보자!! 라는 마인드로 시작했다고 함

단점부터 소개 :

핫 리로드 할때 화면이 다시 리프레쉬 된다.
 - 텍스트 하나 바꿀려고 하는데 다시 페이지를 리프레쉬하면 열받음,,

최초 페이지 로딩이 느리다.
 - 가끔 사용자들이 접속이 안되는 줄 안다..

공식적으로 SEO를 지원하지 않는다.
(Search Engine Optimization)


장점 : 

하나의 프로그래밍 언어와 프로젝트 설계로 Flutter앱을 Web으로 배포

서비스 초기, MVP 형태로 빠르게 개발, 배포 그리고 사용자들의 피드백을 받으면서 개발 가능
- 배포한 웹 URL로 마케팅 광고 등 여러가지 채널로 바로 사용자들에게 전달 가능
- 복잡하고 오래 걸리는 iOS 배포 과정은 추후에…

웹이지만 앱처럼 훌륭한 성능과 사용자들에게 훌륭한 경험 제공 가능
- Flutter 기본 UI 컴포넌트로도 보기 좋은 웹 페이지를 만들기 쉬움
- 가끔 웹인지 앱인지 구분하기 어려움

PWA(Progressive Web Application)와 SPA(Single Page Animation)에 최적화

PWA란?
웹 어플리케이션을 모바일 앱과 유사한 경험을 제공하도록 개선한 기술
- 설치 용이성
    - 모바일에서 앱스토어가 아닌 웹사이트에서 바로 홈 화면에 추가로 빠른 설치 가능????이거 어케했냐

PWA로 계좌인증이 가능!

전체적인 스크린 사이즈 문제가 있었다.

아쉽게도 푸시 메시지와 알림같은 네이티브 기능은 구현하기 힘들다. (안드는 됨. 근데 iOS는 WWDC에서 뭔가 발표를 한다고 하네요~)

MVP 만들기는 최고이다.



PWA로 웹사이트에서 다운받은 어플은 웹앱인가? 그렇다면 토큰 말고 쿠키를 사용하는가? 그렇다면 앱스토어나 플레이스토어의 심사를 받지 않고 다운로드를 받을수 있는 것인가?


스타트업 개발자와 디자이너의 소통법 - 신예은

앱디자인은 레고이다.

블록을 이리저리 쌓아서 결과물을 만들어내는 것처럼

앱들도 이것저것 합쳐서 하나의 서비스를 만드는 것처럼 블록과 흡사하다.


블록쌓기 방식의 디자인은 빠른 피드백을 통한 업무 효율을 증대시킬수 있다.

Flutter의 pub dev를 활용해보자!!

100명의 사람이 있다면 100가지의 일하는 방식이 있을것이다

블록 방식은 모든 사람에게 적용될 방법은 아니라고 생각한다.

문제를 해결하기 위해 고민한다면 좋은 솔루션을 해결할 수 있을 것이다.



Flutter 2023 로드맵 - 박제창

플로우 운영중이심

너무 전문적인 발표라 차라리 ppt를 보고 이해하는게 좋을듯….


Flutter로 앱 개발 입문하기 - 양수장

안드로이드 - 플러터 - 백엔드 라고 하네요~ (국룰)


Flutter가 몸에 좋은 이유?

플러터의 성장세 : 2021년 기준으로 깃허브 스타 개수 138k, 트위터 팔로워 178k, 밋업 멤버 60k정도였지만, 지금은 순서대로 151k, 226k, 75k로 엄청난 성장세를 보여주고 있다.

신규 프로젝트나 국내 스타트업은 플러터를 활용하는 케이스가 많은 편!

플러터 개발자 수요가 점차 늘고 있다고 한다.



플러터는 프레임워크, 엔진, 임베더 3가지 계층으로 나뉜다.

프레임워크 : UI 구성요소 및 위젯이다. Dart로 되어있다.

엔진 : 렌더링 엔진. Skia, 임펠러 등이 엔진에 속한다. 핫 리로드나 사전 컴파일 기능을 지원한다.

임베더 : 엔진을 구동하기 위한 네이티브 코드이다. 다양한 운영체제 환경에서 구동하기 위한 플랫폼별 코드를 만들어놓은 계층이다.

4.0까지 가면 하이브리드는 플러터가 독식하지 않을까 예상하신다. (개인적인 의견)

~~~

기초적인 내용

~~~

플러터를 하다보면 네이티브 파일을 건드릴 순간이 온다. 라는 말을 몇번 들은적이 있었습니다. 아직 저는 플러터에 대해 깊게 알지 못해서 그런 느낌을 받아본 적은 없는데,
발표자님께선 그러한 순간이 왔던 적이 있는지, 그리고 안드 - 플러터 루트를 타면서 안드로이드에 비해 이건 편하고 좋다고 느끼는 점이 무엇인지 궁금합니다.



api를 그대로 표기해주는 단순한 기능이 다이다. 나도 몇번 써본적은 없다. 블투나 위치 정도..? 플러그인이 다해줘서 좋다

블루투스로 하드하게 사용할 정도면 네이티브를 써야할듯..?

안드로이드에서 플러터로 옮기는데 좋은 부분은 선언형 UI라고 말할 수 있다. 개발 속도도 빨라졌다는 것도 장점이다.



다트 3.0이란 무엇인가?? - 홍종표

1. 레코드 User의 이름과 나이를 같이 반환하고 싶다면? 클래스를 만들기도 한다. 리스트를 만들어 반환하면 타입 캐스팅을 별도로 해줘야하고, 필드별로 타입 검사가 되지 않아 실수할 확률이 높다.  코드를 굉장히 많이 구현해야 한다. 모든 파라미터와 리턴값을 클래스로 만드는건 비효율적.  튜플 : 순서대로 정렬된 목록 레코드 : 순서에 상관없이 이름과 값으로 구성된 목록  다트는 이 두가지를 병합해서 레코드라고 부른다.  리스트 보다 타입을 구체적으로 사용할 수 있다. 레코드를 사용할때는 포지션 필드를 적어준다. 네임드 파라미터도 가능하다  포지션 필드의 경우 $1부터 시작한다. (0번째 아님) 하나의 필드만 가지면 (“234”, ) (zhaakfmf qnxdlrl)  필드명이 _로 시작하거나, 기본메소드, 중복인 경우 하나의 필드만 가지면서 , 를 쓰지 않는다면 컴파일 에러가 뜬다.  미래에는 파라미터를 보낼때 if 문을 사용 가능하다고 한다..! 
2. 클래스 모디파이어  다트의 철학 : 관대함  그런데 왜 클래스 모디파이어가 필요할까?  - 작성자와 사용자들이 해당 타입에 대해 보다 일관된 조건을 신뢰, 이 조건을 통해 타입을 더 쉽게 유지보수 가능  구현을 금지하는 것으로 기존 사용자들의 변경 없이 새 멤버를 추가 가능 상속까지 금지하면 새 멤버를 추가하는 것이 완전히 안전하다.  클래스 모디파이어는 Part of 를 포함한 파일까지 적용이 가능하다.  final : 라이브러리 외부에서 상속 및 구현을 막음 mixin: 클래스의 mixin을 허용    
3. 실드 클래스  switch 문에서 break가 삭제되었다…?  switch 문이 아니라 switch식으로 바뀌어서 리턴이 가능해졌다.  완정성 검사  모든 경우를 처리하는가? 모든 경우에 도달 가능한가?  1 0, 0 0, 0 1인 상황에서 1 1이 없으면 런타임 에러가 날 것이다.  클래스인 경우 직접적으로 생성 불가능 sealed 타입의 구현, 상속, 믹스인하는 모든 자식 타입은 sealed 타입이 정의된 라이브러리에서 정의되어야 함 
4. 패턴  데이터 구조를 분해하거나 비교하는데 사용  구조 분해 -> 코드를 간결하게 작성하며 가독성을 높임  List를 변경시ㅣㅋ지 않으면서 1, 2, 인덱스, 그리고 나머지로 분리해줘!  기존의 경우에서는 직접 0번째에 접근해서 a에 담고,… 힘들었지만  var[a, b, …c] = [1, 2, 3, 4, 5];  로 가능해졌다.  그 외에도 맵, 레코드도 구조분해가 가능하다.  서버에서 받아온 JSON 데이터를 구조분해를 통해 로컬 변수에 저장하지 않고도 사용할 수 있는가?    
5. 시간 남으면 다트 3.0


Flutter에 피그마 variable fonts 적용하기 - 개발자가 디자이너에게 이쁨받는 방법 - 정주영

Variable Font를 접하게 된 계기

폰트 변경이 너무 잦은데 더 편한 방법이 없을까?

고민하다가 피그마 Variable Fonts를 보고 이거다! 라는 느낌을 받았다.



피그마 밸류어블 폰트

하나의 폰트를 가지고 여러개의 가변이 가능하고, UI를 바꿀떄도 하나의 폰트를 가지고 자간, 기울기를 바꿀 수 있게 제공해준다.  사용자가 유형과 아이콘을 제어할수 있도록 새롭고 혁신적인 글꼴 형식이다.  하나의 폰트로 더 풍부한 표현이 가능하다

지속적인 표현이 가능하다

폰트에 다양한 애니메이션을 추가할 수 있다.

하나의 폰트로 여러 스타일에 더욱 접근하기 쉬워진다.


기존 플러터에 커스텀 폰트를 적용하는 방법

공홈에 있다고 한다 ㅇㅇ;

사용할 폰트들을 전부 assets/fonts 안에 넣어두고 쓴다

Pub spec.yaml에 형식을 넣어서 적어준다.

이 방식은 폰트를 제거하고 추가하는데 너무 불편하다.


플러터에 밸류어블 폰트 적용하기

preTendardVariable를 패밀리에 넣으면 모든 폰트를 사용할 수 있다.

폰트 굵기를 바꾸더라도 수치만 조절하면 되는거라 매우 편리하다.

Wght 외에도 wdth(글자 너비), slnt(기울기), ital(이테리체), opsz(비율)이 있다.


구글에서 제공하는 폰트 정보


정리 

Font file 관리가 용이하다.

Yaml 코드가 간결하다.

디자이너의 요청을 더욱 쉽게 받아줄 수 있다.

개발로 표현 가능한 방법이 더욱 풍부해졌다.

폰트 스타일 theme 정리가 더욱 간결해졌다.



플러터 네이버 맵 1.0 리뉴얼 회고 - 김승빈


간단 소개

Never Maps SDK 기능 완벽 지원

사용하기 편리한 API

문서 / 예제 제공

BSD-3 오픈 소스, 꾸준한 지원 제공


왜 리뉴얼을 했나?

이슈들이 0. 버젼에서 많이 있었다.

27개 정도…? 0.10 단독 이슈만 27개 있었다고 한다.

일부 오버레이를 미지원했다고 한다. 기능 부재 이슈

물려받은 코드라 유지보수가 어려웠다.

그렇게 리뉴얼을 시작했다.

위젯 : 여러 구성요소가 섞여 있음. => 복잡성 증가, 사용성 저하

오버레이를 추가할때마다 setState로 위젯을 업데이트해야함

인자를 최소한으로 줄임! 옵션의 변경이 있을때만 재빌드 필요
